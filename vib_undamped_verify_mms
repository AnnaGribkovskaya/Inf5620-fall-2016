import sys
import sympy as sym
import numpy as np
import matploylib.pyplot as plt
V, t, I, w, dt = sym.symbols('V t w dt') #global symbols
f = None # global variable for the sourse term in the ODE
def ode_source_term(u):
    """Return the terms in the ODE that the source term
    must balance, here m*u'' + f(u') + c*u.
    u is a symbolic Python function of t.
    damping in our case is zero, so we do not include it."""
        return sym.diff(u(t), t, t) + w**2*u(t)
  
def residual_discrete_eq(u):
    """Return the residual of the discrete eq. with u inserted."""
    R = DtDt(u, dt) + w**2*u(t) - f
    return sym.simplify(R)

def residual_discrete_eq_step1(u):
    """Return the residual of the discrete eq. at the first
    step with u inserted."""
    R = 0.5*(2*(u(t+dt) - u(t))/dt + dt*w**2*u(t) - (2*V + dt*f))
    R = R.subs(t, 0) # Substitute t with 0
    return sym.simplify(R)

def DtDt(u, dt):
    """Return 2nd-order finite difference for u_tt.
    u is a symbolic Python function of t.
    """
    return (u(t+dt) - 2*u(t) + u(t-dt))/(dt*dt) 
